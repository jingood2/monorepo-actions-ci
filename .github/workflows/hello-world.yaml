name: "hello-world"

on:
  push:
    branches:
      - 'main'
      - 'feat**'
    paths:
      - "projects/hello-world/**"
      - "./github/workflows/hello-world.yaml"
  delete:
    branches:
      - 'feat**'

env:
  CI: "true"
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SAM_TEMPLATE: template.yaml
  TESTING_STACK_NAME: sam-pipeline-dev
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::037729278610:role/github-monorepo-actions-ci-role
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::037729278610:role/aws-sam-cli-managed-dev-p-CloudFormationExecutionR-B3VPYQ0FH62F
  TESTING_ARTIFACTS_BUCKET: jingood2-s3-dev-content
  # If there are functions with "Image" PackageType in your template,
  # uncomment the line below and add "--image-repository ${TESTING_IMAGE_REPOSITORY}" to
  # testing "sam package" and "sam deploy" commands.
  # TESTING_IMAGE_REPOSITORY = '0123456789.dkr.ecr.region.amazonaws.com/repository-name'
  TESTING_REGION: ap-northeast-2
  PROD_STACK_NAME: sam-pipeline-prod
  PROD_PIPELINE_EXECUTION_ROLE: arn:aws:iam::037729278610:role/github-monorepo-actions-ci-role
  PROD_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::037729278610:role/aws-sam-cli-managed-dev-p-CloudFormationExecutionR-B3VPYQ0FH62F
  PROD_ARTIFACTS_BUCKET: jingood2-s3-dev-content
  # If there are functions with "Image" PackageType in your template,
  # uncomment the line below and add "--image-repository ${PROD_IMAGE_REPOSITORY}" to
  # prod "sam package" and "sam deploy" commands.
  # PROD_IMAGE_REPOSITORY = '0123456789.dkr.ecr.region.amazonaws.com/repository-name'
  PROD_REGION: ap-northeast-2

jobs:
  test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
      ################################
      # Run Linter against code base #
      ################################
      #- name: Lint Code Base
      #  uses: github/super-linter@v4
      #  env:
      #    VALIDATE_ALL_CODEBASE: false
      #    DEFAULT_BRANCH:  feat-test
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  delete-feature:
    if: startsWith(github.event.ref, 'feat') && github.event_name == 'delete'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v1

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Delete feature branch stack
        env:
          FEATURE_BRANCH_NAME: ${{ github.event.ref }}
        run: |
          cd projects/hello-world
          sam delete \
            --stack-name $(echo ${FEATURE_BRANCH_NAME##*/} | tr -cd '[a-zA-Z0-9-]') \
            --region ${TESTING_REGION} \
            --no-prompts

  build-and-deploy-feature:
    # this stage is triggered only for feature branches (feature*),
    # which will build the stack and deploy to a stack named with branch name.
    #if: startsWith(github.ref, 'refs/heads/feat')
    #needs: [test]
    uses: .github/workflows/reusable-lambda-cicd.yml
    with:
      aws_account_id: 037729278610
      app_name: hello-world

