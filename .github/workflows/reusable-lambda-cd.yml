on:
  workflow_call:
    inputs:
      aws_account_id:
        required: true
        type: string
      aws_region:
        type: string
        required: false
        default: ap-northeast-2
      app_name:
        type: string
        required: true
      project_root_dir:
        type: string
        required: false
        default: projects
      pipeline_execution_role:
        type: string
        required: false
        default: github-monorepo-actions-ci-role
      artifact_bucket:
        type: string
        required: false
        default: jingood2-s3-dev-content

env:
  CI: "true"
  SAM_TEMPLATE: template.yaml
  TESTING_STACK_NAME: ${ inputs.app_name }-dev
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::${{inputs.aws_account_id}}:role/${{inputs.pipeline_execution_role}}
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::${{inputs.aws_account_id}}:role/aws-sam-cli-managed-dev-p-CloudFormationExecutionR-B3VPYQ0FH62F
  APP_DIRECTORY: ${{inputs.project_root_dir}}/${{inputs.app_name}}
  TESTING_ARTIFACTS_BUCKET: ${{inputs.artifact_bucket}}
  AWS_REGION: ${{inputs.aws_region}}

jobs:
  deploy-prod:
      if: github.ref == 'refs/heads/main'
      needs: [integration-test]
      runs-on: ubuntu-latest
      permissions:
        id-token: write
        contents: read
      # Configure GitHub Action Environment to have a manual approval step before deployment to production
      # https://docs.github.com/en/actions/reference/environments
      # environment: <configured-environment>
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-python@v2
        - uses: aws-actions/setup-sam@v1
        - uses: actions/download-artifact@v2
          with:
            name: packaged-prod.yaml 

        - name: Assume the prod pipeline user role
          uses: aws-actions/configure-aws-credentials@master
          with:
            aws-region: ${{ inputs.aws_region }}
            role-to-assume: arn:aws:iam::${{inputs.aws_account_id}}:role/${{inputs.pipeline_execution_role}}
            role-session-name: prod-deployment
            role-duration-seconds: 3600
            role-skip-session-tagging: true

        - name: Deploy to production account
          run: |
            sam deploy --stack-name ${PROD_STACK_NAME} \
              --template packaged-prod.yaml \
              --capabilities CAPABILITY_IAM \
              --region ${PROD_REGION} \
              --s3-bucket ${PROD_ARTIFACTS_BUCKET} \
              --no-fail-on-empty-changeset \
              --role-arn ${PROD_CLOUDFORMATION_EXECUTION_ROLE}